buildscript {
    ext {
        //springBootVersion = '1.4.6.RELEASE'
        springBootVersion = '2.7.8'
        // springBootVersion = '3.2.0'
    }
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'com.gradle.plugin-publish' version '1.1.0'
    id 'java-gradle-plugin'
}

gradle.beforeProject { settings ->
    settings.buildscript.repositories { gradlePluginPortal() }
    settings.buildscript.dependencies { classpath("org.gradle.toolchains:foojay-resolver:0.7.0") }
}
gradle.settingsEvaluated { settings ->
    settings.apply plugin: 'org.gradle.toolchains.foojay-resolver-convention'
} 

apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'hashimotonet'
version = '1.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        google()
        gradlePluginPortal()
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
 }

repositories {
	mavenCentral()
	jcenter()
	google()
	gradlePluginPortal()
}

jar {
    manifest {
        attributes 'Main-Class': 'hashimotonet.SpringPhotoGalleryApplication'
    }
}
		
dependencies {
	// Spring Session
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.session:spring-session-jdbc'

 	//implementation 'org.springframework.boot:spring-boot-starter-tomcat'
 	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.springframework.boot:spring-boot-starter-validation"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
	//implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'
	implementation("org.springframework.boot:spring-boot-starter-log4j2")
	implementation group: 'jstl', name: 'jstl', version: '1.2'
	implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '10.0.22'
	annotationProcessor "org.seasar.doma.boot:doma-spring-boot-starter:1.1.1"
	
	compileOnly("org.seasar.doma.boot:doma-spring-boot-starter:1.1.1") {
        exclude group: "org.springframework.boot"
    }
    compileOnly 'org.apache.commons:commons-lang3'
    
    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
	implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.8.10'
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.8.10'
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.8.10'
    testImplementation 'org.springframework.security:spring-security-test:5.8.10'
    //compileOnly 'spring-security-web:5.2.1.RELEASE'
    //compileOnly 'spring-security-config:5.2.1.RELEASE'
    //compileOnly 'spring-security-core:5.2.1.RELEASE'
    
    // thymeleaf(ロール/権限によるthymeleafのテンプレートの制御)
    //compileOnly "org.thymeleaf.extras:thymeleaf-extras-springsecurity"// , version: '3.0.9.RELEASE'
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.2.RELEASE'
    compileOnly "org.modelmapper:modelmapper:0.7.5"

	// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.0'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
 }

repositories {
	mavenCentral()
	google()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
 	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '2.2.3'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
	// https://mvnrepository.com/artifact/commons-codec/commons-codec
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	//implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.4'
	//implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'
	//runtimeOnly 'mysql:mysql-connector-java'
	implementation("org.springframework.boot:spring-boot-starter-log4j2")
	implementation group: 'jstl', name: 'jstl', version: '1.2'
	implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '10.0.22'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.1'
	runtimeOnly files('jdbc/mysql-connector-java-8.0.25.jar')
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

test {
	useJUnitPlatform()
}

task cleanLocalDependencies(type: Delete) {
    delete gradle.gradleUserHomeDir.path + '/caches/modules-2/files-2.1'
}

clean.dependsOn cleanLocalDependencies

}

